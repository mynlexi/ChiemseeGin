import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'

import { useQuery, gql } from '@apollo/client';
import  {ALL_RECIPES, RECIPE_INFO, RECIPE_TITLES} from '../../src/apollo_files/queries/recipes';
import { initApollo } from '../../src/apollo_files/apolloClient';
import {client as shopifyClient} from '../../src/utils/shopify'
import { useCartContext, useCartUpdateContext } from '../../src/hooks/useCartStorage';
import { useSideCartUpdate } from '../../src/hooks/useOpenSidebar';





function Product({product, cart}) {
  const {
    id = product.Id,
    title = product.title,
    imageUrl = product.images[0].src,
    variantId = product.variants[0].id,
    price = parseInt(product.variants[0].price),
    handle = product.handle,
    quantity = 1
  } = product

  const {addCartValue} = useCartUpdateContext()
  const {setSideCartOpen} = useSideCartUpdate()

  const addProduct = () => {
    addCartValue({
      productId: id,
      variantId: variantId,
      image: imageUrl,
      title: title,
      price: price,
      quantity: quantity
    })
    setSideCartOpen(true)
  }

  return (
    <div key={`product at product/index ${id}`}>
    <Link href={`products/${handle.toLowerCase()}`} ><a>
   
      <p>{title}</p>
      <img src={imageUrl} style={{height: "100px"}} className="mx-auto mt-10" />
     
   </a></Link>
   <button onClick={addProduct} 
    className="bg-purple-900">
      {cart?.some(item => item.productId === id) ? "In Cart" : "Add To Cart"}
    </button>
   </div>

    ) 
}



export default function ProductsMain({collections}) {
  
  
  const gins = collections[0]
  const accessoires = collections[1]

  let {cart} = useCartContext()
  if (cart === null) {
      cart = []
  }
  return (
    <div className="{styles.container}">
      <Head>
        <title>Products</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
   
      <div className="centered m-auto p-12">
        <div>
          <h2>{gins.description}</h2>
        
          {gins.products.map(product => {
            return (
              <div key={product.id}>
              <Product product={product} cart={cart} />
              </div>
            )
          })}
        </div>

        <div className="mt-20">
          <h2>{accessoires.description}</h2>
        
          {accessoires.products.map(product => {
            return (
              <Product product={product} cart={cart} />
            )
          })}
        </div>
        
      </div>


    </div>
  )
}


export async function getStaticProps() {

  // const products = await shopifyClient.product.fetchAll()
  const collections = await shopifyClient.collection.fetchAllWithProducts()

  
  
 
  
  return { props: { collections: JSON.parse(JSON.stringify(collections))  } }

}
